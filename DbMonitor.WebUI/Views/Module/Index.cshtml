
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_LayoutList.cshtml";
}

<blockquote class="layui-elem-quote quoteBox">

    <div class="layui-inline">
        <div class="layui-input-inline">
            <input type="text" class="layui-input searchVal" id="type" placeholder="请输入搜索的内容">
        </div>
    </div>
    <div class="layui-inline">
        <a class="layui-btn" data-action="search">搜索</a>
    </div>
    <div class="layui-inline">
        <a class="layui-btn layui-btn-normal" data-action="new">新建模块</a>
    </div>
    <div class="layui-inline">
        <a class="layui-btn layui-btn-warm" data-action="authority">权限分配</a>
    </div>
    <div class="layui-inline">
        <a class="layui-btn layui-btn-danger" data-action="delBatch">批量删除</a>
    </div>
</blockquote>
<table id="datatable" lay-filter="table"></table>
<script type="text/html" id="barDemo">
    <a class="layui-btn layui-btn-xs" lay-event="edit">编辑</a>
    <a class="layui-btn layui-btn-danger layui-btn-xs" lay-event="del">删除</a>
</script>
<script>
    window.tableConfig = {
        elemSelector: "#datatable",
        tableID: "dt",
        colConfig:  [[{ type: 'checkbox', fixed: 'left' }
                  , { field: 'MName', title: '模块名', sort: true }
                  , { field: 'MUrl', title: '模块URL', sort: true }
                  , { field: 'MType', title: '模块类型', sort: true }
                  , { field: 'IsEnabled', title: '是否启用', sort: true }
                  , { field: 'MIconType', title: '图标类型', sort: true }
                  , { field: 'MIcon', title: '模块图标', sort: true }
                  , { field: 'MLevel', title: '模块级别', sort: true }
                  , { field: 'MParentID', title: '父模块ID', sort: true }
                  , { field: 'MSortingNumber', title: '同级序号', sort: true }
                  , { fixed: 'right', width: 120, align: 'center', toolbar: '#barDemo' }//绑定列工具条
                ]],
        dataInterface: "@Url.Action("List", "Module")"
    };
    window.dataOperation = {
        moreAcive: {
            search: function (table, layer) {
                table.reload(tableConfig.tableID,//ID
                    {
                        where: { //设定异步数据接口的额外参数，任意设
                            type: $("#type").val()
                        },
                        page: {
                            curr: 1
                        }
                    });
            },
            authority: function (table, layer) {
                var checkStatus = table.checkStatus(tableConfig.tableID)
                            , data = checkStatus.data;
                if (data.length != 1) {
                    layer.alert('请选中一行！', { icon: 2 });
                    return;
                }
                layer.open({
                    type: 2,
                    title: '权限分配',
                    content: '@Url.Action("AuthorityAllocation", "Module")/' + data[0].ID,
                    scrollbar: false,
                    area: ['700px', '500px'],
                    resize: false,
                    success: function (layero, index) {
                        var body = layer.getChildFrame('body', index);
                        var iframeWin = window[layero.find('iframe')[0]['name']]; //得到iframe页的窗口对象，执行iframe页的方法：iframeWin.method();
                    }
                });
            }
        },
        createConfig: {
            title: "新建权限",
            url: "@Url.Action("Create", "Module")"
        },
        deleteConfig: {
            url: "@Url.Action("Delete", "Module")"
        },
        editConfig: {
            title: "编辑权限",
            url: "@Url.Action("Edit", "Module")"
        }
    };
</script>