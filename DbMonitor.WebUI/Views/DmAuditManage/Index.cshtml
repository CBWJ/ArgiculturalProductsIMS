
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_LayoutList.cshtml";
}

<input type="hidden" id="scId" , name="scId" value="@ViewBag.SCID" />
<blockquote class="layui-elem-quote quoteBox">

    <div class="layui-inline">
        <div class="layui-input-inline">
            <input type="text" class="layui-input searchVal" id="user" placeholder="请输入用户名检索">
        </div>
        <div class="layui-input-inline">
            <input type="text" class="layui-input searchVal" id="obj" placeholder="请输入对象名检索">
        </div>
        <div class="layui-input-inline">
            <input type="text" class="layui-input searchVal" id="type" placeholder="请输入语句类型检索">
        </div>
    </div>
    @{
        Html.RenderPartial("~/Views/Shared/_PartialMainButton.cshtml", (List<DbMonitor.Domain.Authority>)ViewBag.Authority);
    }
</blockquote>
<table id="datatable" lay-filter="table"></table>
<script type="text/html" id="barDemo">
    @{
        Html.RenderPartial("~/Views/Shared/_PartialToolbarButton.cshtml", (List<DbMonitor.Domain.Authority>)ViewBag.Authority);
    }
</script>
<script>
    //console.log("页面数据");
    window.tableConfig = {
        elemSelector: "#datatable",
        tableID: "dt",
        colConfig:  [[{ type: 'checkbox', fixed: 'left' }
                    , { field: 'SLEVEL', title: '审计级别', sort: true }
                    , { field: 'USERNAME', title: '用户名', sort: true }
                    , { field: 'OBJECTNAME', title: '对象名', sort: true }
                    , { field: 'COLNAME', title: '列名', sort: true }
                    , { field: 'STYPE', title: '审计类型', sort: true }
                    , { field: 'SWHENEVER', title: '审计情况', sort: true }
                    , { fixed: 'right', width: 80, align: 'center', toolbar: '#barDemo' }//绑定列工具条
                ]],
        dataInterface: "@Url.Action("List", ViewBag.Controller)",
        where: { scId: '@ViewBag.SCID' }
    };
    window.dataOperation = {
        moreAcive: {
            search: function (table, layer) {
                table.reload(tableConfig.tableID,//ID
                    {
                        where: { //设定异步数据接口的额外参数，任意设
                            user: $("#user").val(),
                            obj: $("#obj").val(),
                            type: $("#type").val(),
                            scId: $("#scId").val()
                        },
                        page: {
                            curr: 1
                        }
                    });
            },
            newSTMT: function (table, layer) {
                layer.open({
                    type: 2,
                    title: "创建语句审计",
                    content: "@Url.Action("CreateStatement", ViewBag.Controller)/@ViewBag.SCID",
                    scrollbar: false,
                    area: ['700px', '500px'],
                    resize: false,
                    success: function (layero, index) {
                    }
                });
            },
            newObject: function (table, layer) {
                layer.open({
                    type: 2,
                    title: "创建对象审计",
                    content: "@Url.Action("CreateObject", ViewBag.Controller)/@ViewBag.SCID",
                    scrollbar: false,
                    area: ['700px', '500px'],
                    resize: false,
                    success: function (layero, index) {
                    }
                });
            }
        },
        moreTBActive: {
            del: function (layer, obj) {
                var data = obj.data; //获得当前行数据
                var layEvent = obj.event; //获得 lay-event 对应的值（也可以是表头的 event 参数对应的值）

                layer.confirm('真的删除该审计吗？', { icon: 3, title: '提示' }, function (index) {
                    var url, postData;
                    if (data.SLEVEL == "语句级") {
                        url = "@Url.Action("DeleteStatement", ViewBag.Controller)";
                        postData = {scId:@ViewBag.SCID, type: data.STYPE, username: data.USERNAME, whenever: data.SWHENEVER };
                    }
                    else {
                        url = "@Url.Action("DeleteObject", ViewBag.Controller)";
                        postData = {
                            scId:@ViewBag.SCID,
                            type: data.STYPE, username: data.USERNAME, whenever: data.SWHENEVER,
                            tvname: data.OBJECTNAME, colname: data.COLNAME
                        };
                    }
                    $.post(url, postData,
                        function (res) {
                            layer.close(index);
                            var objRes = JSON.parse(res);
                            if (objRes.status == 0) {
                                obj.del(); //删除对应行（tr）的DOM结构，并更新缓存
                            } else {
                                layer.alert(objRes.message, { icon: 5 });
                            }
                        },"json");
                });
            }
        },
        createConfig: {
        },
        deleteConfig: {
        },
        editConfig: {
        }
    };
</script>

