@model DbMonitor.Domain.MirrorExport
@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_LayoutEdit.cshtml";
    var users = (List<string>)ViewBag.Users;
}

@Html.HiddenFor(m => m.SCID)
@Html.HiddenFor(m => m.MEDirectory)
<div class="layui-form-item">
    <label class="layui-form-label">用户名</label>
    <div class="layui-input-inline">
        @Html.TextBoxFor(m => m.MEUser, new { lay_verify = "required", placeholder = "请输入用户名", autocomplete = "off", @class = "layui-input" })
    </div>
    <label class="layui-form-label">密码</label>
    <div class="layui-input-inline">
        @Html.PasswordFor(m => m.MEPassword, new { lay_verify = "required", placeholder = "请输入密码", autocomplete = "off", @class = "layui-input", value=Model.MEPassword })
    </div>
</div>
<div class="layui-form-item">
    <label class="layui-form-label">导出模式</label>
    <div class="layui-input-inline">
        <select name="MESchemas" lay-verify="required" lay-search>
            <option value="">请选择模式</option>
            @foreach (var u in users)
            {
                <option value="@u" @(Model.MESchemas.ToUpper() == u ? "selected" : "")>@u</option>
            }
        </select>
    </div>
    <label class="layui-form-label">导出时间点</label>
    <div class="layui-input-inline">
        @Html.TextBoxFor(m => m.MEExportTime, new { lay_verify = "required", placeholder = "请输入导出时间点", autocomplete = "off", @class = "layui-input" })
    </div>   
</div>
<script>
    function setForm(form) {
        layui.use('laydate', function () {
            var laydate = layui.laydate;

            //执行一个laydate实例
            laydate.render({
                elem: '#MEExportTime' //指定元素
                ,type: 'datetime'
            });
        });
    }
</script>